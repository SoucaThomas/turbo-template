
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id
  name               String
  email              String    @unique(map: "user_email_unique")
  emailVerified      Boolean   @map("email_verified")
  image              String?
  createdAt          DateTime  @map("created_at") @db.Timestamp(6)
  updatedAt          DateTime  @updatedAt @map("updated_at") @db.Timestamp(6)
  stripe_customer_id String?
  accounts           Account[]
  sessions           Session[]

  stripeCustomerId String?

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime @map("expires_at") @db.Timestamp(6)
  token     String   @unique(map: "session_token_unique")
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "session_user_id_user_id_fk")

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String    @map("account_id")
  providerId            String    @map("provider_id")
  userId                String    @map("user_id")
  accessToken           String?   @map("access_token")
  refreshToken          String?   @map("refresh_token")
  idToken               String?   @map("id_token")
  accessTokenExpiresAt  DateTime? @map("access_token_expires_at") @db.Timestamp(6)
  refreshTokenExpiresAt DateTime? @map("refresh_token_expires_at") @db.Timestamp(6)
  scope                 String?
  password              String?
  createdAt             DateTime  @map("created_at") @db.Timestamp(6)
  updatedAt             DateTime  @map("updated_at") @db.Timestamp(6)
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "account_user_id_user_id_fk")

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime  @map("expires_at") @db.Timestamp(6)
  createdAt  DateTime? @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime? @updatedAt @map("updated_at") @db.Timestamp(6)

  @@map("verification")
}

// Better Auth Stripe Models
model Subscription {
  id                     String    @id
  plan                   String
  referenceId            String    @map("reference_id")
  stripeCustomerId       String?   @map("stripe_customer_id")
  stripeSubscriptionId   String?   @map("stripe_subscription_id")
  status                 String?   @default("incomplete")
  periodStart            DateTime? @map("period_start") @db.Timestamp(6)
  periodEnd              DateTime? @map("period_end") @db.Timestamp(6)
  cancelAtPeriodEnd      Boolean?  @map("cancel_at_period_end")
  trialStart             DateTime? @map("trial_start") @db.Timestamp(6)
  trialEnd               DateTime? @map("trial_end") @db.Timestamp(6)
  createdAt              DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt              DateTime  @updatedAt @map("updated_at") @db.Timestamp(6)

  @@map("subscription")
}
